#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DonkehFrameworkComms

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum DonkehFrameworkComms.EDFCommsFormatAccessRule
// NumValues: 0x0005
enum class EDFCommsFormatAccessRule : uint8
{
	None                                     = 0,
	ReadWrite                                = 1,
	ReadOnly                                 = 2,
	WriteOnly                                = 3,
	EDFCommsFormatAccessRule_MAX             = 4,
};

// ScriptStruct DonkehFrameworkComms.DFCommStateSetupParams
// 0x0018 (0x0018 - 0x0000)
struct FDFCommStateSetupParams final 
{
public:
	class UDFCommChannel*                         OwningChannel;                                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDFCommChannelDefinition*               OwningChannelDefinition;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDFPlayerCommsComponent*                OwningChannelCommsCompOwner;                       // 0x0010(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//(alignof(FDFCommStateSetupParams) == 0x000008, "Wrong alignment on FDFCommStateSetupParams");
//(sizeof(FDFCommStateSetupParams) == 0x000018, "Wrong size on FDFCommStateSetupParams");
//(offsetof(FDFCommStateSetupParams, OwningChannel) == 0x000000, "Member 'FDFCommStateSetupParams::OwningChannel' has a wrong offset!");
//(offsetof(FDFCommStateSetupParams, OwningChannelDefinition) == 0x000008, "Member 'FDFCommStateSetupParams::OwningChannelDefinition' has a wrong offset!");
//(offsetof(FDFCommStateSetupParams, OwningChannelCommsCompOwner) == 0x000010, "Member 'FDFCommStateSetupParams::OwningChannelCommsCompOwner' has a wrong offset!");

// ScriptStruct DonkehFrameworkComms.DFGenericChannelMsg
// 0x0038 (0x0038 - 0x0000)
struct FDFGenericChannelMsg final 
{
public:
	class FString                                 ChatMsgContent;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bSenderIsTalking : 1;                              // 0x0010(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1103[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         OptionalMsgData;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerState*                           SenderPS;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MsgID;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1104[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//(alignof(FDFGenericChannelMsg) == 0x000008, "Wrong alignment on FDFGenericChannelMsg");
//(sizeof(FDFGenericChannelMsg) == 0x000038, "Wrong size on FDFGenericChannelMsg");
//(offsetof(FDFGenericChannelMsg, ChatMsgContent) == 0x000000, "Member 'FDFGenericChannelMsg::ChatMsgContent' has a wrong offset!");
//(offsetof(FDFGenericChannelMsg, OptionalMsgData) == 0x000018, "Member 'FDFGenericChannelMsg::OptionalMsgData' has a wrong offset!");
//(offsetof(FDFGenericChannelMsg, SenderPS) == 0x000028, "Member 'FDFGenericChannelMsg::SenderPS' has a wrong offset!");
//(offsetof(FDFGenericChannelMsg, MsgID) == 0x000030, "Member 'FDFGenericChannelMsg::MsgID' has a wrong offset!");

// ScriptStruct DonkehFrameworkComms.DFChannelMsgRecord
// 0x0048 (0x0048 - 0x0000)
struct FDFChannelMsgRecord final 
{
public:
	struct FDFGenericChannelMsg                   Msg;                                               // 0x0000(0x0038)(NativeAccessSpecifierPublic)
	class UDFCommsFormatBase*                     MsgFormat;                                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDFCommChannel*                         MsgChannel;                                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//(alignof(FDFChannelMsgRecord) == 0x000008, "Wrong alignment on FDFChannelMsgRecord");
//(sizeof(FDFChannelMsgRecord) == 0x000048, "Wrong size on FDFChannelMsgRecord");
//(offsetof(FDFChannelMsgRecord, Msg) == 0x000000, "Member 'FDFChannelMsgRecord::Msg' has a wrong offset!");
//(offsetof(FDFChannelMsgRecord, MsgFormat) == 0x000038, "Member 'FDFChannelMsgRecord::MsgFormat' has a wrong offset!");
//(offsetof(FDFChannelMsgRecord, MsgChannel) == 0x000040, "Member 'FDFChannelMsgRecord::MsgChannel' has a wrong offset!");

// ScriptStruct DonkehFrameworkComms.DFCommChannelMapItemEntry
// 0x001C (0x0028 - 0x000C)
struct FDFCommChannelMapItemEntry final  : public FFastArraySerializerItem
{
public:
	class FName                                   Key;                                               // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1105[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDFCommChannel*                         Value;                                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1106[0x8];                                     // 0x0020(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//(alignof(FDFCommChannelMapItemEntry) == 0x000008, "Wrong alignment on FDFCommChannelMapItemEntry");
//(sizeof(FDFCommChannelMapItemEntry) == 0x000028, "Wrong size on FDFCommChannelMapItemEntry");
//(offsetof(FDFCommChannelMapItemEntry, Key) == 0x00000C, "Member 'FDFCommChannelMapItemEntry::Key' has a wrong offset!");
//(offsetof(FDFCommChannelMapItemEntry, Value) == 0x000018, "Member 'FDFCommChannelMapItemEntry::Value' has a wrong offset!");

// ScriptStruct DonkehFrameworkComms.DFCommChannelMap
// 0x0068 (0x0170 - 0x0108)
struct FDFCommChannelMap final  : public FFastArraySerializer
{
public:
	TArray<struct FDFCommChannelMapItemEntry>     ChannelEntries;                                    // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class UDFCommChannel*>      ChannelMap;                                        // 0x0118(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_1107[0x8];                                     // 0x0168(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
//(alignof(FDFCommChannelMap) == 0x000008, "Wrong alignment on FDFCommChannelMap");
//(sizeof(FDFCommChannelMap) == 0x000170, "Wrong size on FDFCommChannelMap");
//(offsetof(FDFCommChannelMap, ChannelEntries) == 0x000108, "Member 'FDFCommChannelMap::ChannelEntries' has a wrong offset!");
//(offsetof(FDFCommChannelMap, ChannelMap) == 0x000118, "Member 'FDFCommChannelMap::ChannelMap' has a wrong offset!");

// ScriptStruct DonkehFrameworkComms.DFCommsFormatEntry
// 0x0020 (0x0020 - 0x0000)
struct FDFCommsFormatEntry final 
{
public:
	class FName                                   FormatName;                                        // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         FormatClass;                                       // 0x0008(0x0018)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//(alignof(FDFCommsFormatEntry) == 0x000008, "Wrong alignment on FDFCommsFormatEntry");
//(sizeof(FDFCommsFormatEntry) == 0x000020, "Wrong size on FDFCommsFormatEntry");
//(offsetof(FDFCommsFormatEntry, FormatName) == 0x000000, "Member 'FDFCommsFormatEntry::FormatName' has a wrong offset!");
//(offsetof(FDFCommsFormatEntry, FormatClass) == 0x000008, "Member 'FDFCommsFormatEntry::FormatClass' has a wrong offset!");

// ScriptStruct DonkehFrameworkComms.DFCommChannelEntry
// 0x0018 (0x0018 - 0x0000)
struct FDFCommChannelEntry final 
{
public:
	struct FSoftObjectPath                        ChannelDefinition;                                 // 0x0000(0x0018)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//(alignof(FDFCommChannelEntry) == 0x000008, "Wrong alignment on FDFCommChannelEntry");
//(sizeof(FDFCommChannelEntry) == 0x000018, "Wrong size on FDFCommChannelEntry");
//(offsetof(FDFCommChannelEntry, ChannelDefinition) == 0x000000, "Member 'FDFCommChannelEntry::ChannelDefinition' has a wrong offset!");

// ScriptStruct DonkehFrameworkComms.DFPlayerVOIPTalkingState
// 0x0010 (0x0010 - 0x0000)
struct FDFPlayerVOIPTalkingState final 
{
public:
	uint8                                         bWasTalking : 1;                                   // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsTalking : 1;                                    // 0x0000(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPendingTalkerReset : 1;                           // 0x0000(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_1108[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDFCommChannel*                         TalkerChannel;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
//(alignof(FDFPlayerVOIPTalkingState) == 0x000008, "Wrong alignment on FDFPlayerVOIPTalkingState");
//(sizeof(FDFPlayerVOIPTalkingState) == 0x000010, "Wrong size on FDFPlayerVOIPTalkingState");
//(offsetof(FDFPlayerVOIPTalkingState, TalkerChannel) == 0x000008, "Member 'FDFPlayerVOIPTalkingState::TalkerChannel' has a wrong offset!");

}

