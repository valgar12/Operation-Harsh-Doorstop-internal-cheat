#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GOAPNPC

#include "Basic.hpp"

#include "AIModule_classes.hpp"
#include "GOAPNPC_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class GOAPNPC.GOAPAIController
// 0x0008 (0x0330 - 0x0328)
class AGOAPAIController final  : public AAIController
{
public:
	class UGOAPComponent*                         GOAPComponent;                                     // 0x0328(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GOAPAIController">();
	}
	static class AGOAPAIController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGOAPAIController>();
	}
};
//(alignof(AGOAPAIController) == 0x000008, "Wrong alignment on AGOAPAIController");
//(sizeof(AGOAPAIController) == 0x000330, "Wrong size on AGOAPAIController");
//(offsetof(AGOAPAIController, GOAPComponent) == 0x000328, "Member 'AGOAPAIController::GOAPComponent' has a wrong offset!");

// Class GOAPNPC.GOAPAction
// 0x0070 (0x0098 - 0x0028)
class UGOAPAction : public UObject
{
public:
	class FString                                 Name_GOAPAction;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Cost;                                              // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_125F[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     TargetClass;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAtom>                          Preconditions;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAtom>                          Effects;                                           // 0x0058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                 Target;                                            // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bActivated;                                        // 0x0070(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1260[0x27];                                    // 0x0071(0x0027)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginAction(class APawn* Pawn);
	bool DoAction(class APawn* Pawn, class FString* FailureReason);
	void EndAction(class APawn* Pawn);

	bool CheckProceduralPrecondition(class APawn* Pawn, bool bPlanning) const;
	TArray<class AActor*> GetTargetsList(class APawn* Pawn) const;
	bool HasCompleted(class APawn* Pawn) const;
	bool ReceiveIsActionInvalid(class APawn* Pawn) const;
	bool Validate(class APawn* Pawn) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GOAPAction">();
	}
	static class UGOAPAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGOAPAction>();
	}
};
//(alignof(UGOAPAction) == 0x000008, "Wrong alignment on UGOAPAction");
//(sizeof(UGOAPAction) == 0x000098, "Wrong size on UGOAPAction");
//(offsetof(UGOAPAction, Name_GOAPAction) == 0x000028, "Member 'UGOAPAction::Name_GOAPAction' has a wrong offset!");
//(offsetof(UGOAPAction, Cost) == 0x000038, "Member 'UGOAPAction::Cost' has a wrong offset!");
//(offsetof(UGOAPAction, TargetClass) == 0x000040, "Member 'UGOAPAction::TargetClass' has a wrong offset!");
//(offsetof(UGOAPAction, Preconditions) == 0x000048, "Member 'UGOAPAction::Preconditions' has a wrong offset!");
//(offsetof(UGOAPAction, Effects) == 0x000058, "Member 'UGOAPAction::Effects' has a wrong offset!");
//(offsetof(UGOAPAction, Target) == 0x000068, "Member 'UGOAPAction::Target' has a wrong offset!");
//(offsetof(UGOAPAction, bActivated) == 0x000070, "Member 'UGOAPAction::bActivated' has a wrong offset!");

// Class GOAPNPC.GOAPComponent
// 0x00B8 (0x0168 - 0x00B0)
class UGOAPComponent : public UActorComponent
{
public:
	TArray<struct FAtom>                          CurrentWorldInitial;                               // 0x00B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAtom>                          DesiredWorldInitial;                               // 0x00C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGOAPGoal>                  GoalInitial;                                       // 0x00D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UGOAPGoalSet>            GoalSetInitial;                                    // 0x00D8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UGOAPAction>>        ActionClasses;                                     // 0x0100(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MaxDepth;                                          // 0x0110(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1266[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          AIOwner;                                           // 0x0118(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APawn*                                  AIPawnOwner;                                       // 0x0120(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1267[0x8];                                     // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UGOAPGoalManager*                       GoalManager;                                       // 0x0130(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGOAPAction*>                    AuxActions;                                        // 0x0138(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGOAPAction*>                    Plan;                                              // 0x0148(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1268[0x10];                                    // 0x0158(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearPlan();
	bool ExecuteGOAP(bool bCreatePlan, bool bRemoveActionOnComplete);
	bool GeneratePlan();
	void InvalidateGoalSelection();
	void InvalidatePlan();
	void ReceiveOnReset();
	void Reset();
	void SetCurrentWorld(TArray<struct FAtom>& NewCurrentWorld);
	void SetGoal(class UGOAPGoal* NewGoal);
	void UpdateCurrentWorld(TArray<struct FAtom>& Atoms);

	TArray<struct FAtom> GetCurrentWorldStateAtoms() const;
	TArray<struct FAtom> GetDesiredWorldStateAtoms() const;
	TArray<class UGOAPAction*> GetPlanSnapshot() const;
	bool HasPlan() const;
	bool IsPlanValid() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GOAPComponent">();
	}
	static class UGOAPComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGOAPComponent>();
	}
};
//(alignof(UGOAPComponent) == 0x000008, "Wrong alignment on UGOAPComponent");
//(sizeof(UGOAPComponent) == 0x000168, "Wrong size on UGOAPComponent");
//(offsetof(UGOAPComponent, CurrentWorldInitial) == 0x0000B0, "Member 'UGOAPComponent::CurrentWorldInitial' has a wrong offset!");
//(offsetof(UGOAPComponent, DesiredWorldInitial) == 0x0000C0, "Member 'UGOAPComponent::DesiredWorldInitial' has a wrong offset!");
//(offsetof(UGOAPComponent, GoalInitial) == 0x0000D0, "Member 'UGOAPComponent::GoalInitial' has a wrong offset!");
//(offsetof(UGOAPComponent, GoalSetInitial) == 0x0000D8, "Member 'UGOAPComponent::GoalSetInitial' has a wrong offset!");
//(offsetof(UGOAPComponent, ActionClasses) == 0x000100, "Member 'UGOAPComponent::ActionClasses' has a wrong offset!");
//(offsetof(UGOAPComponent, MaxDepth) == 0x000110, "Member 'UGOAPComponent::MaxDepth' has a wrong offset!");
//(offsetof(UGOAPComponent, AIOwner) == 0x000118, "Member 'UGOAPComponent::AIOwner' has a wrong offset!");
//(offsetof(UGOAPComponent, AIPawnOwner) == 0x000120, "Member 'UGOAPComponent::AIPawnOwner' has a wrong offset!");
//(offsetof(UGOAPComponent, GoalManager) == 0x000130, "Member 'UGOAPComponent::GoalManager' has a wrong offset!");
//(offsetof(UGOAPComponent, AuxActions) == 0x000138, "Member 'UGOAPComponent::AuxActions' has a wrong offset!");
//(offsetof(UGOAPComponent, Plan) == 0x000148, "Member 'UGOAPComponent::Plan' has a wrong offset!");

// Class GOAPNPC.GOAPGoalSet
// 0x0060 (0x0090 - 0x0030)
class UGOAPGoalSet final  : public UPrimaryDataAsset
{
public:
	class FString                                 Name_GOAPGoalSet;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSet<TSubclassOf<class UGOAPGoal>>            Goals;                                             // 0x0040(0x0050)(Edit, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GOAPGoalSet">();
	}
	static class UGOAPGoalSet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGOAPGoalSet>();
	}
};
//(alignof(UGOAPGoalSet) == 0x000008, "Wrong alignment on UGOAPGoalSet");
//(sizeof(UGOAPGoalSet) == 0x000090, "Wrong size on UGOAPGoalSet");
//(offsetof(UGOAPGoalSet, Name_GOAPGoalSet) == 0x000030, "Member 'UGOAPGoalSet::Name_GOAPGoalSet' has a wrong offset!");
//(offsetof(UGOAPGoalSet, Goals) == 0x000040, "Member 'UGOAPGoalSet::Goals' has a wrong offset!");

// Class GOAPNPC.GOAPGoalManager
// 0x0038 (0x0060 - 0x0028)
class UGOAPGoalManager final  : public UObject
{
public:
	class UGOAPGoalSet*                           GoalSet;                                           // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UGOAPGoal*>                      AuxGoals;                                          // 0x0030(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGOAPGoal*                              CurrentGoal;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1269[0x18];                                    // 0x0048(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UGOAPGoal* AddGoal(TSubclassOf<class UGOAPGoal>& GoalClass);
	void ClearGoals();
	class UGOAPGoal* FindGoal(TSubclassOf<class UGOAPGoal>& GoalClass);
	void InvalidateGoalSelection();
	void InvalidatePlan();
	void RemoveGoal(TSubclassOf<class UGOAPGoal>& GoalClass);
	void SetCurrentGoal(class UGOAPGoal* NewGoal, bool bDeactivatePreviousGoal);
	void SetGoalSet(class UGOAPGoalSet* InGoalSet);
	void UpdateGoalSet(class UGOAPGoalSet* InGoalSet);

	TArray<struct FAtom> GetCurrentGoalAtoms() const;
	class UGOAPComponent* GetOuterGOAPComp() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GOAPGoalManager">();
	}
	static class UGOAPGoalManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGOAPGoalManager>();
	}
};
//(alignof(UGOAPGoalManager) == 0x000008, "Wrong alignment on UGOAPGoalManager");
//(sizeof(UGOAPGoalManager) == 0x000060, "Wrong size on UGOAPGoalManager");
//(offsetof(UGOAPGoalManager, GoalSet) == 0x000028, "Member 'UGOAPGoalManager::GoalSet' has a wrong offset!");
//(offsetof(UGOAPGoalManager, AuxGoals) == 0x000030, "Member 'UGOAPGoalManager::AuxGoals' has a wrong offset!");
//(offsetof(UGOAPGoalManager, CurrentGoal) == 0x000040, "Member 'UGOAPGoalManager::CurrentGoal' has a wrong offset!");

// Class GOAPNPC.GOAPGoal
// 0x0040 (0x0068 - 0x0028)
class UGOAPGoal : public UObject
{
public:
	class FString                                 GoalName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAtom>                          DesiredWorldInitial;                               // 0x0038(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_126B[0x10];                                    // 0x0048(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RelevanceWeightBase;                               // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         RelevanceWeight;                                   // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AAIController*                          AIOwner;                                           // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Activate();
	void CalculateRelevance();
	void ClearRelevance();
	void Deactivate();
	void GeneratePlanFailure();
	bool RequiresNewPlan();

	class UGOAPGoalManager* GetOuterGoalManager() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GOAPGoal">();
	}
	static class UGOAPGoal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGOAPGoal>();
	}
};
//(alignof(UGOAPGoal) == 0x000008, "Wrong alignment on UGOAPGoal");
//(sizeof(UGOAPGoal) == 0x000068, "Wrong size on UGOAPGoal");
//(offsetof(UGOAPGoal, GoalName) == 0x000028, "Member 'UGOAPGoal::GoalName' has a wrong offset!");
//(offsetof(UGOAPGoal, DesiredWorldInitial) == 0x000038, "Member 'UGOAPGoal::DesiredWorldInitial' has a wrong offset!");
//(offsetof(UGOAPGoal, RelevanceWeightBase) == 0x000058, "Member 'UGOAPGoal::RelevanceWeightBase' has a wrong offset!");
//(offsetof(UGOAPGoal, RelevanceWeight) == 0x00005C, "Member 'UGOAPGoal::RelevanceWeight' has a wrong offset!");
//(offsetof(UGOAPGoal, AIOwner) == 0x000060, "Member 'UGOAPGoal::AIOwner' has a wrong offset!");

}

