#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MovieSceneTracks

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "MovieSceneTracks_structs.hpp"
#include "MovieScene_structs.hpp"
#include "MovieScene_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Class MovieSceneTracks.MovieSceneTransformOrigin
// 0x0000 (0x0028 - 0x0028)
class IMovieSceneTransformOrigin final  : public IInterface
{
public:
	struct FTransform BP_GetTransformOrigin() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneTransformOrigin">();
	}
	static class IMovieSceneTransformOrigin* GetDefaultObj()
	{
		return GetDefaultObjImpl<IMovieSceneTransformOrigin>();
	}
};
//(alignof(IMovieSceneTransformOrigin) == 0x000008, "Wrong alignment on IMovieSceneTransformOrigin");
//(sizeof(IMovieSceneTransformOrigin) == 0x000028, "Wrong size on IMovieSceneTransformOrigin");

// Class MovieSceneTracks.MovieScene3DConstraintSection
// 0x0028 (0x0108 - 0x00E0)
class UMovieScene3DConstraintSection : public UMovieSceneSection
{
public:
	struct FGuid                                  ConstraintId;                                      // 0x00E0(0x0010)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMovieSceneObjectBindingID             ConstraintBindingID;                               // 0x00F0(0x0018)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void SetConstraintBindingID(struct FMovieSceneObjectBindingID& InConstraintBindingID);

	const struct FMovieSceneObjectBindingID GetConstraintBindingID() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScene3DConstraintSection">();
	}
	static class UMovieScene3DConstraintSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScene3DConstraintSection>();
	}
};
//(alignof(UMovieScene3DConstraintSection) == 0x000008, "Wrong alignment on UMovieScene3DConstraintSection");
//(sizeof(UMovieScene3DConstraintSection) == 0x000108, "Wrong size on UMovieScene3DConstraintSection");
//(offsetof(UMovieScene3DConstraintSection, ConstraintId) == 0x0000E0, "Member 'UMovieScene3DConstraintSection::ConstraintId' has a wrong offset!");
//(offsetof(UMovieScene3DConstraintSection, ConstraintBindingID) == 0x0000F0, "Member 'UMovieScene3DConstraintSection::ConstraintBindingID' has a wrong offset!");

// Class MovieSceneTracks.MovieScene3DAttachSection
// 0x0018 (0x0120 - 0x0108)
class UMovieScene3DAttachSection final  : public UMovieScene3DConstraintSection
{
public:
	class FName                                   AttachSocketName;                                  // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachComponentName;                               // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttachmentRule                               AttachmentLocationRule;                            // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttachmentRule                               AttachmentRotationRule;                            // 0x0119(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttachmentRule                               AttachmentScaleRule;                               // 0x011A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDetachmentRule                               DetachmentLocationRule;                            // 0x011B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDetachmentRule                               DetachmentRotationRule;                            // 0x011C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDetachmentRule                               DetachmentScaleRule;                               // 0x011D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16B1[0x2];                                     // 0x011E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScene3DAttachSection">();
	}
	static class UMovieScene3DAttachSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScene3DAttachSection>();
	}
};
//(alignof(UMovieScene3DAttachSection) == 0x000008, "Wrong alignment on UMovieScene3DAttachSection");
//(sizeof(UMovieScene3DAttachSection) == 0x000120, "Wrong size on UMovieScene3DAttachSection");
//(offsetof(UMovieScene3DAttachSection, AttachSocketName) == 0x000108, "Member 'UMovieScene3DAttachSection::AttachSocketName' has a wrong offset!");
//(offsetof(UMovieScene3DAttachSection, AttachComponentName) == 0x000110, "Member 'UMovieScene3DAttachSection::AttachComponentName' has a wrong offset!");
//(offsetof(UMovieScene3DAttachSection, AttachmentLocationRule) == 0x000118, "Member 'UMovieScene3DAttachSection::AttachmentLocationRule' has a wrong offset!");
//(offsetof(UMovieScene3DAttachSection, AttachmentRotationRule) == 0x000119, "Member 'UMovieScene3DAttachSection::AttachmentRotationRule' has a wrong offset!");
//(offsetof(UMovieScene3DAttachSection, AttachmentScaleRule) == 0x00011A, "Member 'UMovieScene3DAttachSection::AttachmentScaleRule' has a wrong offset!");
//(offsetof(UMovieScene3DAttachSection, DetachmentLocationRule) == 0x00011B, "Member 'UMovieScene3DAttachSection::DetachmentLocationRule' has a wrong offset!");
//(offsetof(UMovieScene3DAttachSection, DetachmentRotationRule) == 0x00011C, "Member 'UMovieScene3DAttachSection::DetachmentRotationRule' has a wrong offset!");
//(offsetof(UMovieScene3DAttachSection, DetachmentScaleRule) == 0x00011D, "Member 'UMovieScene3DAttachSection::DetachmentScaleRule' has a wrong offset!");

// Class MovieSceneTracks.MovieScene3DConstraintTrack
// 0x0010 (0x0068 - 0x0058)
class UMovieScene3DConstraintTrack : public UMovieSceneTrack
{
public:
	TArray<class UMovieSceneSection*>             ConstraintSections;                                // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScene3DConstraintTrack">();
	}
	static class UMovieScene3DConstraintTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScene3DConstraintTrack>();
	}
};
//(alignof(UMovieScene3DConstraintTrack) == 0x000008, "Wrong alignment on UMovieScene3DConstraintTrack");
//(sizeof(UMovieScene3DConstraintTrack) == 0x000068, "Wrong size on UMovieScene3DConstraintTrack");
//(offsetof(UMovieScene3DConstraintTrack, ConstraintSections) == 0x000058, "Member 'UMovieScene3DConstraintTrack::ConstraintSections' has a wrong offset!");

// Class MovieSceneTracks.MovieScene3DAttachTrack
// 0x0000 (0x0068 - 0x0068)
class UMovieScene3DAttachTrack final  : public UMovieScene3DConstraintTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScene3DAttachTrack">();
	}
	static class UMovieScene3DAttachTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScene3DAttachTrack>();
	}
};
//(alignof(UMovieScene3DAttachTrack) == 0x000008, "Wrong alignment on UMovieScene3DAttachTrack");
//(sizeof(UMovieScene3DAttachTrack) == 0x000068, "Wrong size on UMovieScene3DAttachTrack");

// Class MovieSceneTracks.MovieScene3DPathSection
// 0x00A8 (0x01B0 - 0x0108)
class UMovieScene3DPathSection final  : public UMovieScene3DConstraintSection
{
public:
	struct FMovieSceneFloatChannel                TimingCurve;                                       // 0x0108(0x00A0)(NativeAccessSpecifierPublic)
	EMovieScene3DPathSection_Axis                 FrontAxisEnum;                                     // 0x01A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMovieScene3DPathSection_Axis                 UpAxisEnum;                                        // 0x01A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16B2[0x2];                                     // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	uint8                                         bFollow : 1;                                       // 0x01AC(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReverse : 1;                                      // 0x01AC(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bForceUpright : 1;                                 // 0x01AC(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_16B3[0x3];                                     // 0x01AD(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScene3DPathSection">();
	}
	static class UMovieScene3DPathSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScene3DPathSection>();
	}
};
//(alignof(UMovieScene3DPathSection) == 0x000008, "Wrong alignment on UMovieScene3DPathSection");
//(sizeof(UMovieScene3DPathSection) == 0x0001B0, "Wrong size on UMovieScene3DPathSection");
//(offsetof(UMovieScene3DPathSection, TimingCurve) == 0x000108, "Member 'UMovieScene3DPathSection::TimingCurve' has a wrong offset!");
//(offsetof(UMovieScene3DPathSection, FrontAxisEnum) == 0x0001A8, "Member 'UMovieScene3DPathSection::FrontAxisEnum' has a wrong offset!");
//(offsetof(UMovieScene3DPathSection, UpAxisEnum) == 0x0001A9, "Member 'UMovieScene3DPathSection::UpAxisEnum' has a wrong offset!");

// Class MovieSceneTracks.MovieScene3DPathTrack
// 0x0000 (0x0068 - 0x0068)
class UMovieScene3DPathTrack final  : public UMovieScene3DConstraintTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScene3DPathTrack">();
	}
	static class UMovieScene3DPathTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScene3DPathTrack>();
	}
};
//(alignof(UMovieScene3DPathTrack) == 0x000008, "Wrong alignment on UMovieScene3DPathTrack");
//(sizeof(UMovieScene3DPathTrack) == 0x000068, "Wrong size on UMovieScene3DPathTrack");

// Class MovieSceneTracks.MovieScene3DTransformSection
// 0x0650 (0x0730 - 0x00E0)
class UMovieScene3DTransformSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneTransformMask               TransformMask;                                     // 0x00E0(0x0004)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16B4[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneFloatChannel                Translation[0x3];                                  // 0x00E8(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                Rotation[0x3];                                     // 0x02C8(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                Scale[0x3];                                        // 0x04A8(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                ManualWeight;                                      // 0x0688(0x00A0)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_16B5[0x4];                                     // 0x0728(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bUseQuaternionInterpolation;                       // 0x072C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16B6[0x3];                                     // 0x072D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScene3DTransformSection">();
	}
	static class UMovieScene3DTransformSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScene3DTransformSection>();
	}
};
//(alignof(UMovieScene3DTransformSection) == 0x000008, "Wrong alignment on UMovieScene3DTransformSection");
//(sizeof(UMovieScene3DTransformSection) == 0x000730, "Wrong size on UMovieScene3DTransformSection");
//(offsetof(UMovieScene3DTransformSection, TransformMask) == 0x0000E0, "Member 'UMovieScene3DTransformSection::TransformMask' has a wrong offset!");
//(offsetof(UMovieScene3DTransformSection, Translation) == 0x0000E8, "Member 'UMovieScene3DTransformSection::Translation' has a wrong offset!");
//(offsetof(UMovieScene3DTransformSection, Rotation) == 0x0002C8, "Member 'UMovieScene3DTransformSection::Rotation' has a wrong offset!");
//(offsetof(UMovieScene3DTransformSection, Scale) == 0x0004A8, "Member 'UMovieScene3DTransformSection::Scale' has a wrong offset!");
//(offsetof(UMovieScene3DTransformSection, ManualWeight) == 0x000688, "Member 'UMovieScene3DTransformSection::ManualWeight' has a wrong offset!");
//(offsetof(UMovieScene3DTransformSection, bUseQuaternionInterpolation) == 0x00072C, "Member 'UMovieScene3DTransformSection::bUseQuaternionInterpolation' has a wrong offset!");

// Class MovieSceneTracks.MovieScenePropertyTrack
// 0x0030 (0x0088 - 0x0058)
class UMovieScenePropertyTrack : public UMovieSceneNameableTrack
{
public:
	class UMovieSceneSection*                     SectionToKey;                                      // 0x0058(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   PropertyName;                                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 PropertyPath;                                      // 0x0068(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x0078(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScenePropertyTrack">();
	}
	static class UMovieScenePropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScenePropertyTrack>();
	}
};
//(alignof(UMovieScenePropertyTrack) == 0x000008, "Wrong alignment on UMovieScenePropertyTrack");
//(sizeof(UMovieScenePropertyTrack) == 0x000088, "Wrong size on UMovieScenePropertyTrack");
//(offsetof(UMovieScenePropertyTrack, SectionToKey) == 0x000058, "Member 'UMovieScenePropertyTrack::SectionToKey' has a wrong offset!");
//(offsetof(UMovieScenePropertyTrack, PropertyName) == 0x000060, "Member 'UMovieScenePropertyTrack::PropertyName' has a wrong offset!");
//(offsetof(UMovieScenePropertyTrack, PropertyPath) == 0x000068, "Member 'UMovieScenePropertyTrack::PropertyPath' has a wrong offset!");
//(offsetof(UMovieScenePropertyTrack, Sections) == 0x000078, "Member 'UMovieScenePropertyTrack::Sections' has a wrong offset!");

// Class MovieSceneTracks.MovieScene3DTransformTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieScene3DTransformTrack final  : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScene3DTransformTrack">();
	}
	static class UMovieScene3DTransformTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScene3DTransformTrack>();
	}
};
//(alignof(UMovieScene3DTransformTrack) == 0x000008, "Wrong alignment on UMovieScene3DTransformTrack");
//(sizeof(UMovieScene3DTransformTrack) == 0x000088, "Wrong size on UMovieScene3DTransformTrack");

// Class MovieSceneTracks.MovieSceneActorReferenceSection
// 0x0140 (0x0220 - 0x00E0)
class UMovieSceneActorReferenceSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneActorReferenceData          ActorReferenceData;                                // 0x00E0(0x00B0)(NativeAccessSpecifierPrivate)
	struct FIntegralCurve                         ActorGuidIndexCurve;                               // 0x0190(0x0080)(Deprecated, NativeAccessSpecifierPrivate)
	TArray<class FString>                         ActorGuidStrings;                                  // 0x0210(0x0010)(ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneActorReferenceSection">();
	}
	static class UMovieSceneActorReferenceSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneActorReferenceSection>();
	}
};
//(alignof(UMovieSceneActorReferenceSection) == 0x000008, "Wrong alignment on UMovieSceneActorReferenceSection");
//(sizeof(UMovieSceneActorReferenceSection) == 0x000220, "Wrong size on UMovieSceneActorReferenceSection");
//(offsetof(UMovieSceneActorReferenceSection, ActorReferenceData) == 0x0000E0, "Member 'UMovieSceneActorReferenceSection::ActorReferenceData' has a wrong offset!");
//(offsetof(UMovieSceneActorReferenceSection, ActorGuidIndexCurve) == 0x000190, "Member 'UMovieSceneActorReferenceSection::ActorGuidIndexCurve' has a wrong offset!");
//(offsetof(UMovieSceneActorReferenceSection, ActorGuidStrings) == 0x000210, "Member 'UMovieSceneActorReferenceSection::ActorGuidStrings' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneActorReferenceTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieSceneActorReferenceTrack final  : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneActorReferenceTrack">();
	}
	static class UMovieSceneActorReferenceTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneActorReferenceTrack>();
	}
};
//(alignof(UMovieSceneActorReferenceTrack) == 0x000008, "Wrong alignment on UMovieSceneActorReferenceTrack");
//(sizeof(UMovieSceneActorReferenceTrack) == 0x000088, "Wrong size on UMovieSceneActorReferenceTrack");

// Class MovieSceneTracks.MovieSceneAudioSection
// 0x0250 (0x0330 - 0x00E0)
class UMovieSceneAudioSection final  : public UMovieSceneSection
{
public:
	class USoundBase*                             Sound;                                             // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFrameNumber                           StartFrameOffset;                                  // 0x00E8(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StartOffset;                                       // 0x00EC(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AudioStartTime;                                    // 0x00F0(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AudioDilationFactor;                               // 0x00F4(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AudioVolume;                                       // 0x00F8(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16B7[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneFloatChannel                SoundVolume;                                       // 0x0100(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                PitchMultiplier;                                   // 0x01A0(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneActorReferenceData          AttachActorData;                                   // 0x0240(0x00B0)(NativeAccessSpecifierPrivate)
	bool                                          bSuppressSubtitles;                                // 0x02F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverrideAttenuation;                              // 0x02F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16B8[0x6];                                     // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      AttenuationSettings;                               // 0x02F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TDelegate<void(TArray<struct FSubtitleCue>& Subtitles, float CueDuration)> OnQueueSubtitles;                                  // 0x0300(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_             OnAudioFinished;                                   // 0x0310(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_             OnAudioPlaybackPercent;                            // 0x0320(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)

public:
	void SetSound(class USoundBase* InSound);
	void SetStartOffset(const struct FFrameNumber& InStartOffset);

	class USoundBase* GetSound() const;
	struct FFrameNumber GetStartOffset() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneAudioSection">();
	}
	static class UMovieSceneAudioSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneAudioSection>();
	}
};
//(alignof(UMovieSceneAudioSection) == 0x000008, "Wrong alignment on UMovieSceneAudioSection");
//(sizeof(UMovieSceneAudioSection) == 0x000330, "Wrong size on UMovieSceneAudioSection");
//(offsetof(UMovieSceneAudioSection, Sound) == 0x0000E0, "Member 'UMovieSceneAudioSection::Sound' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, StartFrameOffset) == 0x0000E8, "Member 'UMovieSceneAudioSection::StartFrameOffset' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, StartOffset) == 0x0000EC, "Member 'UMovieSceneAudioSection::StartOffset' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, AudioStartTime) == 0x0000F0, "Member 'UMovieSceneAudioSection::AudioStartTime' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, AudioDilationFactor) == 0x0000F4, "Member 'UMovieSceneAudioSection::AudioDilationFactor' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, AudioVolume) == 0x0000F8, "Member 'UMovieSceneAudioSection::AudioVolume' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, SoundVolume) == 0x000100, "Member 'UMovieSceneAudioSection::SoundVolume' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, PitchMultiplier) == 0x0001A0, "Member 'UMovieSceneAudioSection::PitchMultiplier' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, AttachActorData) == 0x000240, "Member 'UMovieSceneAudioSection::AttachActorData' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, bSuppressSubtitles) == 0x0002F0, "Member 'UMovieSceneAudioSection::bSuppressSubtitles' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, bOverrideAttenuation) == 0x0002F1, "Member 'UMovieSceneAudioSection::bOverrideAttenuation' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, AttenuationSettings) == 0x0002F8, "Member 'UMovieSceneAudioSection::AttenuationSettings' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, OnQueueSubtitles) == 0x000300, "Member 'UMovieSceneAudioSection::OnQueueSubtitles' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, OnAudioFinished) == 0x000310, "Member 'UMovieSceneAudioSection::OnAudioFinished' has a wrong offset!");
//(offsetof(UMovieSceneAudioSection, OnAudioPlaybackPercent) == 0x000320, "Member 'UMovieSceneAudioSection::OnAudioPlaybackPercent' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneAudioTrack
// 0x0010 (0x0068 - 0x0058)
class UMovieSceneAudioTrack final  : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             AudioSections;                                     // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneAudioTrack">();
	}
	static class UMovieSceneAudioTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneAudioTrack>();
	}
};
//(alignof(UMovieSceneAudioTrack) == 0x000008, "Wrong alignment on UMovieSceneAudioTrack");
//(sizeof(UMovieSceneAudioTrack) == 0x000068, "Wrong size on UMovieSceneAudioTrack");
//(offsetof(UMovieSceneAudioTrack, AudioSections) == 0x000058, "Member 'UMovieSceneAudioTrack::AudioSections' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneBoolSection
// 0x0098 (0x0178 - 0x00E0)
class UMovieSceneBoolSection : public UMovieSceneSection
{
public:
	bool                                          DefaultValue;                                      // 0x00E0(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16B9[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneBoolChannel                 BoolCurve;                                         // 0x00E8(0x0090)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneBoolSection">();
	}
	static class UMovieSceneBoolSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneBoolSection>();
	}
};
//(alignof(UMovieSceneBoolSection) == 0x000008, "Wrong alignment on UMovieSceneBoolSection");
//(sizeof(UMovieSceneBoolSection) == 0x000178, "Wrong size on UMovieSceneBoolSection");
//(offsetof(UMovieSceneBoolSection, DefaultValue) == 0x0000E0, "Member 'UMovieSceneBoolSection::DefaultValue' has a wrong offset!");
//(offsetof(UMovieSceneBoolSection, BoolCurve) == 0x0000E8, "Member 'UMovieSceneBoolSection::BoolCurve' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneBoolTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieSceneBoolTrack : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneBoolTrack">();
	}
	static class UMovieSceneBoolTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneBoolTrack>();
	}
};
//(alignof(UMovieSceneBoolTrack) == 0x000008, "Wrong alignment on UMovieSceneBoolTrack");
//(sizeof(UMovieSceneBoolTrack) == 0x000088, "Wrong size on UMovieSceneBoolTrack");

// Class MovieSceneTracks.MovieSceneByteSection
// 0x0098 (0x0178 - 0x00E0)
class UMovieSceneByteSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneByteChannel                 ByteCurve;                                         // 0x00E0(0x0098)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneByteSection">();
	}
	static class UMovieSceneByteSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneByteSection>();
	}
};
//(alignof(UMovieSceneByteSection) == 0x000008, "Wrong alignment on UMovieSceneByteSection");
//(sizeof(UMovieSceneByteSection) == 0x000178, "Wrong size on UMovieSceneByteSection");
//(offsetof(UMovieSceneByteSection, ByteCurve) == 0x0000E0, "Member 'UMovieSceneByteSection::ByteCurve' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneByteTrack
// 0x0008 (0x0090 - 0x0088)
class UMovieSceneByteTrack final  : public UMovieScenePropertyTrack
{
public:
	class UEnum*                                  Enum;                                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneByteTrack">();
	}
	static class UMovieSceneByteTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneByteTrack>();
	}
};
//(alignof(UMovieSceneByteTrack) == 0x000008, "Wrong alignment on UMovieSceneByteTrack");
//(sizeof(UMovieSceneByteTrack) == 0x000090, "Wrong size on UMovieSceneByteTrack");
//(offsetof(UMovieSceneByteTrack, Enum) == 0x000088, "Member 'UMovieSceneByteTrack::Enum' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneCameraAnimSection
// 0x0040 (0x0120 - 0x00E0)
class UMovieSceneCameraAnimSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneCameraAnimSectionData       AnimData;                                          // 0x00E0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UCameraAnim*                            CameraAnim;                                        // 0x0100(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PlayRate;                                          // 0x0108(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PlayScale;                                         // 0x010C(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BlendInTime;                                       // 0x0110(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BlendOutTime;                                      // 0x0114(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLooping;                                          // 0x0118(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16BA[0x7];                                     // 0x0119(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCameraAnimSection">();
	}
	static class UMovieSceneCameraAnimSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCameraAnimSection>();
	}
};
//(alignof(UMovieSceneCameraAnimSection) == 0x000008, "Wrong alignment on UMovieSceneCameraAnimSection");
//(sizeof(UMovieSceneCameraAnimSection) == 0x000120, "Wrong size on UMovieSceneCameraAnimSection");
//(offsetof(UMovieSceneCameraAnimSection, AnimData) == 0x0000E0, "Member 'UMovieSceneCameraAnimSection::AnimData' has a wrong offset!");
//(offsetof(UMovieSceneCameraAnimSection, CameraAnim) == 0x000100, "Member 'UMovieSceneCameraAnimSection::CameraAnim' has a wrong offset!");
//(offsetof(UMovieSceneCameraAnimSection, PlayRate) == 0x000108, "Member 'UMovieSceneCameraAnimSection::PlayRate' has a wrong offset!");
//(offsetof(UMovieSceneCameraAnimSection, PlayScale) == 0x00010C, "Member 'UMovieSceneCameraAnimSection::PlayScale' has a wrong offset!");
//(offsetof(UMovieSceneCameraAnimSection, BlendInTime) == 0x000110, "Member 'UMovieSceneCameraAnimSection::BlendInTime' has a wrong offset!");
//(offsetof(UMovieSceneCameraAnimSection, BlendOutTime) == 0x000114, "Member 'UMovieSceneCameraAnimSection::BlendOutTime' has a wrong offset!");
//(offsetof(UMovieSceneCameraAnimSection, bLooping) == 0x000118, "Member 'UMovieSceneCameraAnimSection::bLooping' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneCameraAnimTrack
// 0x0010 (0x0068 - 0x0058)
class UMovieSceneCameraAnimTrack final  : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             CameraAnimSections;                                // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCameraAnimTrack">();
	}
	static class UMovieSceneCameraAnimTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCameraAnimTrack>();
	}
};
//(alignof(UMovieSceneCameraAnimTrack) == 0x000008, "Wrong alignment on UMovieSceneCameraAnimTrack");
//(sizeof(UMovieSceneCameraAnimTrack) == 0x000068, "Wrong size on UMovieSceneCameraAnimTrack");
//(offsetof(UMovieSceneCameraAnimTrack, CameraAnimSections) == 0x000058, "Member 'UMovieSceneCameraAnimTrack::CameraAnimSections' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneCameraCutSection
// 0x0028 (0x0108 - 0x00E0)
class UMovieSceneCameraCutSection final  : public UMovieSceneSection
{
public:
	struct FGuid                                  CameraGuid;                                        // 0x00E0(0x0010)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMovieSceneObjectBindingID             CameraBindingID;                                   // 0x00F0(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetCameraBindingID(struct FMovieSceneObjectBindingID& InCameraBindingID);

	const struct FMovieSceneObjectBindingID GetCameraBindingID() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCameraCutSection">();
	}
	static class UMovieSceneCameraCutSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCameraCutSection>();
	}
};
//(alignof(UMovieSceneCameraCutSection) == 0x000008, "Wrong alignment on UMovieSceneCameraCutSection");
//(sizeof(UMovieSceneCameraCutSection) == 0x000108, "Wrong size on UMovieSceneCameraCutSection");
//(offsetof(UMovieSceneCameraCutSection, CameraGuid) == 0x0000E0, "Member 'UMovieSceneCameraCutSection::CameraGuid' has a wrong offset!");
//(offsetof(UMovieSceneCameraCutSection, CameraBindingID) == 0x0000F0, "Member 'UMovieSceneCameraCutSection::CameraBindingID' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneCameraCutTrack
// 0x0018 (0x0070 - 0x0058)
class UMovieSceneCameraCutTrack final  : public UMovieSceneNameableTrack
{
public:
	bool                                          bCanBlend;                                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16BB[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x0060(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCameraCutTrack">();
	}
	static class UMovieSceneCameraCutTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCameraCutTrack>();
	}
};
//(alignof(UMovieSceneCameraCutTrack) == 0x000008, "Wrong alignment on UMovieSceneCameraCutTrack");
//(sizeof(UMovieSceneCameraCutTrack) == 0x000070, "Wrong size on UMovieSceneCameraCutTrack");
//(offsetof(UMovieSceneCameraCutTrack, bCanBlend) == 0x000058, "Member 'UMovieSceneCameraCutTrack::bCanBlend' has a wrong offset!");
//(offsetof(UMovieSceneCameraCutTrack, Sections) == 0x000060, "Member 'UMovieSceneCameraCutTrack::Sections' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneCameraShakeSection
// 0x0040 (0x0120 - 0x00E0)
class UMovieSceneCameraShakeSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneCameraShakeSectionData      ShakeData;                                         // 0x00E0(0x0020)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShake>               ShakeClass;                                        // 0x0100(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayScale;                                         // 0x0108(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECameraAnimPlaySpace                          PlaySpace;                                         // 0x010C(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16BC[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               UserDefinedPlaySpace;                              // 0x0110(0x000C)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_16BD[0x4];                                     // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCameraShakeSection">();
	}
	static class UMovieSceneCameraShakeSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCameraShakeSection>();
	}
};
//(alignof(UMovieSceneCameraShakeSection) == 0x000008, "Wrong alignment on UMovieSceneCameraShakeSection");
//(sizeof(UMovieSceneCameraShakeSection) == 0x000120, "Wrong size on UMovieSceneCameraShakeSection");
//(offsetof(UMovieSceneCameraShakeSection, ShakeData) == 0x0000E0, "Member 'UMovieSceneCameraShakeSection::ShakeData' has a wrong offset!");
//(offsetof(UMovieSceneCameraShakeSection, ShakeClass) == 0x000100, "Member 'UMovieSceneCameraShakeSection::ShakeClass' has a wrong offset!");
//(offsetof(UMovieSceneCameraShakeSection, PlayScale) == 0x000108, "Member 'UMovieSceneCameraShakeSection::PlayScale' has a wrong offset!");
//(offsetof(UMovieSceneCameraShakeSection, PlaySpace) == 0x00010C, "Member 'UMovieSceneCameraShakeSection::PlaySpace' has a wrong offset!");
//(offsetof(UMovieSceneCameraShakeSection, UserDefinedPlaySpace) == 0x000110, "Member 'UMovieSceneCameraShakeSection::UserDefinedPlaySpace' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneCameraShakeTrack
// 0x0010 (0x0068 - 0x0058)
class UMovieSceneCameraShakeTrack final  : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             CameraShakeSections;                               // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCameraShakeTrack">();
	}
	static class UMovieSceneCameraShakeTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCameraShakeTrack>();
	}
};
//(alignof(UMovieSceneCameraShakeTrack) == 0x000008, "Wrong alignment on UMovieSceneCameraShakeTrack");
//(sizeof(UMovieSceneCameraShakeTrack) == 0x000068, "Wrong size on UMovieSceneCameraShakeTrack");
//(offsetof(UMovieSceneCameraShakeTrack, CameraShakeSections) == 0x000058, "Member 'UMovieSceneCameraShakeTrack::CameraShakeSections' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneCinematicShotSection
// 0x0028 (0x0180 - 0x0158)
class UMovieSceneCinematicShotSection final  : public UMovieSceneSubSection
{
public:
	class FString                                 ShotDisplayName;                                   // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                   DisplayName;                                       // 0x0168(0x0018)(Deprecated, NativeAccessSpecifierPrivate)

public:
	void SetShotDisplayName(const class FString& InShotDisplayName);

	class FString GetShotDisplayName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCinematicShotSection">();
	}
	static class UMovieSceneCinematicShotSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCinematicShotSection>();
	}
};
//(alignof(UMovieSceneCinematicShotSection) == 0x000008, "Wrong alignment on UMovieSceneCinematicShotSection");
//(sizeof(UMovieSceneCinematicShotSection) == 0x000180, "Wrong size on UMovieSceneCinematicShotSection");
//(offsetof(UMovieSceneCinematicShotSection, ShotDisplayName) == 0x000158, "Member 'UMovieSceneCinematicShotSection::ShotDisplayName' has a wrong offset!");
//(offsetof(UMovieSceneCinematicShotSection, DisplayName) == 0x000168, "Member 'UMovieSceneCinematicShotSection::DisplayName' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneCinematicShotTrack
// 0x0000 (0x0068 - 0x0068)
class UMovieSceneCinematicShotTrack final  : public UMovieSceneSubTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneCinematicShotTrack">();
	}
	static class UMovieSceneCinematicShotTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneCinematicShotTrack>();
	}
};
//(alignof(UMovieSceneCinematicShotTrack) == 0x000008, "Wrong alignment on UMovieSceneCinematicShotTrack");
//(sizeof(UMovieSceneCinematicShotTrack) == 0x000068, "Wrong size on UMovieSceneCinematicShotTrack");

// Class MovieSceneTracks.MovieSceneColorSection
// 0x0280 (0x0360 - 0x00E0)
class UMovieSceneColorSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneFloatChannel                RedCurve;                                          // 0x00E0(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                GreenCurve;                                        // 0x0180(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                BlueCurve;                                         // 0x0220(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                AlphaCurve;                                        // 0x02C0(0x00A0)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneColorSection">();
	}
	static class UMovieSceneColorSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneColorSection>();
	}
};
//(alignof(UMovieSceneColorSection) == 0x000008, "Wrong alignment on UMovieSceneColorSection");
//(sizeof(UMovieSceneColorSection) == 0x000360, "Wrong size on UMovieSceneColorSection");
//(offsetof(UMovieSceneColorSection, RedCurve) == 0x0000E0, "Member 'UMovieSceneColorSection::RedCurve' has a wrong offset!");
//(offsetof(UMovieSceneColorSection, GreenCurve) == 0x000180, "Member 'UMovieSceneColorSection::GreenCurve' has a wrong offset!");
//(offsetof(UMovieSceneColorSection, BlueCurve) == 0x000220, "Member 'UMovieSceneColorSection::BlueCurve' has a wrong offset!");
//(offsetof(UMovieSceneColorSection, AlphaCurve) == 0x0002C0, "Member 'UMovieSceneColorSection::AlphaCurve' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneColorTrack
// 0x0008 (0x0090 - 0x0088)
class UMovieSceneColorTrack final  : public UMovieScenePropertyTrack
{
public:
	bool                                          bIsSlateColor;                                     // 0x0088(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16BE[0x7];                                     // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneColorTrack">();
	}
	static class UMovieSceneColorTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneColorTrack>();
	}
};
//(alignof(UMovieSceneColorTrack) == 0x000008, "Wrong alignment on UMovieSceneColorTrack");
//(sizeof(UMovieSceneColorTrack) == 0x000090, "Wrong size on UMovieSceneColorTrack");
//(offsetof(UMovieSceneColorTrack, bIsSlateColor) == 0x000088, "Member 'UMovieSceneColorTrack::bIsSlateColor' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneEnumSection
// 0x0098 (0x0178 - 0x00E0)
class UMovieSceneEnumSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneByteChannel                 EnumCurve;                                         // 0x00E0(0x0098)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneEnumSection">();
	}
	static class UMovieSceneEnumSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneEnumSection>();
	}
};
//(alignof(UMovieSceneEnumSection) == 0x000008, "Wrong alignment on UMovieSceneEnumSection");
//(sizeof(UMovieSceneEnumSection) == 0x000178, "Wrong size on UMovieSceneEnumSection");
//(offsetof(UMovieSceneEnumSection, EnumCurve) == 0x0000E0, "Member 'UMovieSceneEnumSection::EnumCurve' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneEnumTrack
// 0x0008 (0x0090 - 0x0088)
class UMovieSceneEnumTrack final  : public UMovieScenePropertyTrack
{
public:
	class UEnum*                                  Enum;                                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneEnumTrack">();
	}
	static class UMovieSceneEnumTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneEnumTrack>();
	}
};
//(alignof(UMovieSceneEnumTrack) == 0x000008, "Wrong alignment on UMovieSceneEnumTrack");
//(sizeof(UMovieSceneEnumTrack) == 0x000090, "Wrong size on UMovieSceneEnumTrack");
//(offsetof(UMovieSceneEnumTrack, Enum) == 0x000088, "Member 'UMovieSceneEnumTrack::Enum' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneEulerTransformTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieSceneEulerTransformTrack final  : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneEulerTransformTrack">();
	}
	static class UMovieSceneEulerTransformTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneEulerTransformTrack>();
	}
};
//(alignof(UMovieSceneEulerTransformTrack) == 0x000008, "Wrong alignment on UMovieSceneEulerTransformTrack");
//(sizeof(UMovieSceneEulerTransformTrack) == 0x000088, "Wrong size on UMovieSceneEulerTransformTrack");

// Class MovieSceneTracks.MovieSceneEventSectionBase
// 0x0000 (0x00E0 - 0x00E0)
class UMovieSceneEventSectionBase : public UMovieSceneSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneEventSectionBase">();
	}
	static class UMovieSceneEventSectionBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneEventSectionBase>();
	}
};
//(alignof(UMovieSceneEventSectionBase) == 0x000008, "Wrong alignment on UMovieSceneEventSectionBase");
//(sizeof(UMovieSceneEventSectionBase) == 0x0000E0, "Wrong size on UMovieSceneEventSectionBase");

// Class MovieSceneTracks.MovieSceneEventRepeaterSection
// 0x0028 (0x0108 - 0x00E0)
class UMovieSceneEventRepeaterSection final  : public UMovieSceneEventSectionBase
{
public:
	struct FMovieSceneEvent                       Event;                                             // 0x00E0(0x0028)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneEventRepeaterSection">();
	}
	static class UMovieSceneEventRepeaterSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneEventRepeaterSection>();
	}
};
//(alignof(UMovieSceneEventRepeaterSection) == 0x000008, "Wrong alignment on UMovieSceneEventRepeaterSection");
//(sizeof(UMovieSceneEventRepeaterSection) == 0x000108, "Wrong size on UMovieSceneEventRepeaterSection");
//(offsetof(UMovieSceneEventRepeaterSection, Event) == 0x0000E0, "Member 'UMovieSceneEventRepeaterSection::Event' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneEventSection
// 0x0100 (0x01E0 - 0x00E0)
class UMovieSceneEventSection final  : public UMovieSceneSection
{
public:
	struct FNameCurve                             Events;                                            // 0x00E0(0x0078)(Deprecated, NativeAccessSpecifierPrivate)
	struct FMovieSceneEventSectionData            EventData;                                         // 0x0158(0x0088)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneEventSection">();
	}
	static class UMovieSceneEventSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneEventSection>();
	}
};
//(alignof(UMovieSceneEventSection) == 0x000008, "Wrong alignment on UMovieSceneEventSection");
//(sizeof(UMovieSceneEventSection) == 0x0001E0, "Wrong size on UMovieSceneEventSection");
//(offsetof(UMovieSceneEventSection, Events) == 0x0000E0, "Member 'UMovieSceneEventSection::Events' has a wrong offset!");
//(offsetof(UMovieSceneEventSection, EventData) == 0x000158, "Member 'UMovieSceneEventSection::EventData' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneEventTrack
// 0x0028 (0x0080 - 0x0058)
class UMovieSceneEventTrack final  : public UMovieSceneNameableTrack
{
public:
	uint8                                         bFireEventsWhenForwards : 1;                       // 0x0058(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFireEventsWhenBackwards : 1;                      // 0x0058(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_16BF[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EFireEventsAtPosition                         EventPosition;                                     // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16C0[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMovieSceneObjectBindingID>     EventReceivers;                                    // 0x0060(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x0070(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneEventTrack">();
	}
	static class UMovieSceneEventTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneEventTrack>();
	}
};
//(alignof(UMovieSceneEventTrack) == 0x000008, "Wrong alignment on UMovieSceneEventTrack");
//(sizeof(UMovieSceneEventTrack) == 0x000080, "Wrong size on UMovieSceneEventTrack");
//(offsetof(UMovieSceneEventTrack, EventPosition) == 0x00005C, "Member 'UMovieSceneEventTrack::EventPosition' has a wrong offset!");
//(offsetof(UMovieSceneEventTrack, EventReceivers) == 0x000060, "Member 'UMovieSceneEventTrack::EventReceivers' has a wrong offset!");
//(offsetof(UMovieSceneEventTrack, Sections) == 0x000070, "Member 'UMovieSceneEventTrack::Sections' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneEventTriggerSection
// 0x0088 (0x0168 - 0x00E0)
class UMovieSceneEventTriggerSection final  : public UMovieSceneEventSectionBase
{
public:
	struct FMovieSceneEventChannel                EventChannel;                                      // 0x00E0(0x0088)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneEventTriggerSection">();
	}
	static class UMovieSceneEventTriggerSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneEventTriggerSection>();
	}
};
//(alignof(UMovieSceneEventTriggerSection) == 0x000008, "Wrong alignment on UMovieSceneEventTriggerSection");
//(sizeof(UMovieSceneEventTriggerSection) == 0x000168, "Wrong size on UMovieSceneEventTriggerSection");
//(offsetof(UMovieSceneEventTriggerSection, EventChannel) == 0x0000E0, "Member 'UMovieSceneEventTriggerSection::EventChannel' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneFloatSection
// 0x00A0 (0x0180 - 0x00E0)
class UMovieSceneFloatSection : public UMovieSceneSection
{
public:
	struct FMovieSceneFloatChannel                FloatCurve;                                        // 0x00E0(0x00A0)(Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneFloatSection">();
	}
	static class UMovieSceneFloatSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneFloatSection>();
	}
};
//(alignof(UMovieSceneFloatSection) == 0x000008, "Wrong alignment on UMovieSceneFloatSection");
//(sizeof(UMovieSceneFloatSection) == 0x000180, "Wrong size on UMovieSceneFloatSection");
//(offsetof(UMovieSceneFloatSection, FloatCurve) == 0x0000E0, "Member 'UMovieSceneFloatSection::FloatCurve' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneFadeSection
// 0x0018 (0x0198 - 0x0180)
class UMovieSceneFadeSection final  : public UMovieSceneFloatSection
{
public:
	struct FLinearColor                           FadeColor;                                         // 0x0180(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bFadeAudio : 1;                                    // 0x0190(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_16C1[0x7];                                     // 0x0191(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneFadeSection">();
	}
	static class UMovieSceneFadeSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneFadeSection>();
	}
};
//(alignof(UMovieSceneFadeSection) == 0x000008, "Wrong alignment on UMovieSceneFadeSection");
//(sizeof(UMovieSceneFadeSection) == 0x000198, "Wrong size on UMovieSceneFadeSection");
//(offsetof(UMovieSceneFadeSection, FadeColor) == 0x000180, "Member 'UMovieSceneFadeSection::FadeColor' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneFloatTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieSceneFloatTrack : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneFloatTrack">();
	}
	static class UMovieSceneFloatTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneFloatTrack>();
	}
};
//(alignof(UMovieSceneFloatTrack) == 0x000008, "Wrong alignment on UMovieSceneFloatTrack");
//(sizeof(UMovieSceneFloatTrack) == 0x000088, "Wrong size on UMovieSceneFloatTrack");

// Class MovieSceneTracks.MovieSceneFadeTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieSceneFadeTrack final  : public UMovieSceneFloatTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneFadeTrack">();
	}
	static class UMovieSceneFadeTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneFadeTrack>();
	}
};
//(alignof(UMovieSceneFadeTrack) == 0x000008, "Wrong alignment on UMovieSceneFadeTrack");
//(sizeof(UMovieSceneFadeTrack) == 0x000088, "Wrong size on UMovieSceneFadeTrack");

// Class MovieSceneTracks.MovieSceneIntegerSection
// 0x0090 (0x0170 - 0x00E0)
class UMovieSceneIntegerSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneIntegerChannel              IntegerCurve;                                      // 0x00E0(0x0090)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneIntegerSection">();
	}
	static class UMovieSceneIntegerSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneIntegerSection>();
	}
};
//(alignof(UMovieSceneIntegerSection) == 0x000008, "Wrong alignment on UMovieSceneIntegerSection");
//(sizeof(UMovieSceneIntegerSection) == 0x000170, "Wrong size on UMovieSceneIntegerSection");
//(offsetof(UMovieSceneIntegerSection, IntegerCurve) == 0x0000E0, "Member 'UMovieSceneIntegerSection::IntegerCurve' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneIntegerTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieSceneIntegerTrack final  : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneIntegerTrack">();
	}
	static class UMovieSceneIntegerTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneIntegerTrack>();
	}
};
//(alignof(UMovieSceneIntegerTrack) == 0x000008, "Wrong alignment on UMovieSceneIntegerTrack");
//(sizeof(UMovieSceneIntegerTrack) == 0x000088, "Wrong size on UMovieSceneIntegerTrack");

// Class MovieSceneTracks.MovieSceneLevelVisibilitySection
// 0x0018 (0x00F8 - 0x00E0)
class UMovieSceneLevelVisibilitySection final  : public UMovieSceneSection
{
public:
	ELevelVisibility                              Visibility;                                        // 0x00E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16C2[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           LevelNames;                                        // 0x00E8(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetLevelNames(TArray<class FName>& InLevelNames);
	void SetVisibility(ELevelVisibility InVisibility);

	const TArray<class FName> GetLevelNames() const;
	ELevelVisibility GetVisibility() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneLevelVisibilitySection">();
	}
	static class UMovieSceneLevelVisibilitySection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneLevelVisibilitySection>();
	}
};
//(alignof(UMovieSceneLevelVisibilitySection) == 0x000008, "Wrong alignment on UMovieSceneLevelVisibilitySection");
//(sizeof(UMovieSceneLevelVisibilitySection) == 0x0000F8, "Wrong size on UMovieSceneLevelVisibilitySection");
//(offsetof(UMovieSceneLevelVisibilitySection, Visibility) == 0x0000E0, "Member 'UMovieSceneLevelVisibilitySection::Visibility' has a wrong offset!");
//(offsetof(UMovieSceneLevelVisibilitySection, LevelNames) == 0x0000E8, "Member 'UMovieSceneLevelVisibilitySection::LevelNames' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneLevelVisibilityTrack
// 0x0010 (0x0068 - 0x0058)
class UMovieSceneLevelVisibilityTrack final  : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneLevelVisibilityTrack">();
	}
	static class UMovieSceneLevelVisibilityTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneLevelVisibilityTrack>();
	}
};
//(alignof(UMovieSceneLevelVisibilityTrack) == 0x000008, "Wrong alignment on UMovieSceneLevelVisibilityTrack");
//(sizeof(UMovieSceneLevelVisibilityTrack) == 0x000068, "Wrong size on UMovieSceneLevelVisibilityTrack");
//(offsetof(UMovieSceneLevelVisibilityTrack, Sections) == 0x000058, "Member 'UMovieSceneLevelVisibilityTrack::Sections' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneMaterialTrack
// 0x0010 (0x0068 - 0x0058)
class UMovieSceneMaterialTrack : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneMaterialTrack">();
	}
	static class UMovieSceneMaterialTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneMaterialTrack>();
	}
};
//(alignof(UMovieSceneMaterialTrack) == 0x000008, "Wrong alignment on UMovieSceneMaterialTrack");
//(sizeof(UMovieSceneMaterialTrack) == 0x000068, "Wrong size on UMovieSceneMaterialTrack");
//(offsetof(UMovieSceneMaterialTrack, Sections) == 0x000058, "Member 'UMovieSceneMaterialTrack::Sections' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneMaterialParameterCollectionTrack
// 0x0008 (0x0070 - 0x0068)
class UMovieSceneMaterialParameterCollectionTrack final  : public UMovieSceneMaterialTrack
{
public:
	class UMaterialParameterCollection*           MPC;                                               // 0x0068(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneMaterialParameterCollectionTrack">();
	}
	static class UMovieSceneMaterialParameterCollectionTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneMaterialParameterCollectionTrack>();
	}
};
//(alignof(UMovieSceneMaterialParameterCollectionTrack) == 0x000008, "Wrong alignment on UMovieSceneMaterialParameterCollectionTrack");
//(sizeof(UMovieSceneMaterialParameterCollectionTrack) == 0x000070, "Wrong size on UMovieSceneMaterialParameterCollectionTrack");
//(offsetof(UMovieSceneMaterialParameterCollectionTrack, MPC) == 0x000068, "Member 'UMovieSceneMaterialParameterCollectionTrack::MPC' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneComponentMaterialTrack
// 0x0008 (0x0070 - 0x0068)
class UMovieSceneComponentMaterialTrack final  : public UMovieSceneMaterialTrack
{
public:
	int32                                         MaterialIndex;                                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16C3[0x4];                                     // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneComponentMaterialTrack">();
	}
	static class UMovieSceneComponentMaterialTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneComponentMaterialTrack>();
	}
};
//(alignof(UMovieSceneComponentMaterialTrack) == 0x000008, "Wrong alignment on UMovieSceneComponentMaterialTrack");
//(sizeof(UMovieSceneComponentMaterialTrack) == 0x000070, "Wrong size on UMovieSceneComponentMaterialTrack");
//(offsetof(UMovieSceneComponentMaterialTrack, MaterialIndex) == 0x000068, "Member 'UMovieSceneComponentMaterialTrack::MaterialIndex' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneObjectPropertySection
// 0x00C0 (0x01A0 - 0x00E0)
class UMovieSceneObjectPropertySection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneObjectPathChannel           ObjectChannel;                                     // 0x00E0(0x00C0)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneObjectPropertySection">();
	}
	static class UMovieSceneObjectPropertySection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneObjectPropertySection>();
	}
};
//(alignof(UMovieSceneObjectPropertySection) == 0x000008, "Wrong alignment on UMovieSceneObjectPropertySection");
//(sizeof(UMovieSceneObjectPropertySection) == 0x0001A0, "Wrong size on UMovieSceneObjectPropertySection");
//(offsetof(UMovieSceneObjectPropertySection, ObjectChannel) == 0x0000E0, "Member 'UMovieSceneObjectPropertySection::ObjectChannel' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneObjectPropertyTrack
// 0x0008 (0x0090 - 0x0088)
class UMovieSceneObjectPropertyTrack final  : public UMovieScenePropertyTrack
{
public:
	class UClass*                                 PropertyClass;                                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneObjectPropertyTrack">();
	}
	static class UMovieSceneObjectPropertyTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneObjectPropertyTrack>();
	}
};
//(alignof(UMovieSceneObjectPropertyTrack) == 0x000008, "Wrong alignment on UMovieSceneObjectPropertyTrack");
//(sizeof(UMovieSceneObjectPropertyTrack) == 0x000090, "Wrong size on UMovieSceneObjectPropertyTrack");
//(offsetof(UMovieSceneObjectPropertyTrack, PropertyClass) == 0x000088, "Member 'UMovieSceneObjectPropertyTrack::PropertyClass' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneParameterSection
// 0x0060 (0x0140 - 0x00E0)
class UMovieSceneParameterSection final  : public UMovieSceneSection
{
public:
	TArray<struct FBoolParameterNameAndCurve>     BoolParameterNamesAndCurves;                       // 0x00E0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FScalarParameterNameAndCurve>   ScalarParameterNamesAndCurves;                     // 0x00F0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector2DParameterNameAndCurves> Vector2DParameterNamesAndCurves;                   // 0x0100(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVectorParameterNameAndCurves>  VectorParameterNamesAndCurves;                     // 0x0110(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FColorParameterNameAndCurves>   ColorParameterNamesAndCurves;                      // 0x0120(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTransformParameterNameAndCurves> TransformParameterNamesAndCurves;                  // 0x0130(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneParameterSection">();
	}
	static class UMovieSceneParameterSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneParameterSection>();
	}
};
//(alignof(UMovieSceneParameterSection) == 0x000008, "Wrong alignment on UMovieSceneParameterSection");
//(sizeof(UMovieSceneParameterSection) == 0x000140, "Wrong size on UMovieSceneParameterSection");
//(offsetof(UMovieSceneParameterSection, BoolParameterNamesAndCurves) == 0x0000E0, "Member 'UMovieSceneParameterSection::BoolParameterNamesAndCurves' has a wrong offset!");
//(offsetof(UMovieSceneParameterSection, ScalarParameterNamesAndCurves) == 0x0000F0, "Member 'UMovieSceneParameterSection::ScalarParameterNamesAndCurves' has a wrong offset!");
//(offsetof(UMovieSceneParameterSection, Vector2DParameterNamesAndCurves) == 0x000100, "Member 'UMovieSceneParameterSection::Vector2DParameterNamesAndCurves' has a wrong offset!");
//(offsetof(UMovieSceneParameterSection, VectorParameterNamesAndCurves) == 0x000110, "Member 'UMovieSceneParameterSection::VectorParameterNamesAndCurves' has a wrong offset!");
//(offsetof(UMovieSceneParameterSection, ColorParameterNamesAndCurves) == 0x000120, "Member 'UMovieSceneParameterSection::ColorParameterNamesAndCurves' has a wrong offset!");
//(offsetof(UMovieSceneParameterSection, TransformParameterNamesAndCurves) == 0x000130, "Member 'UMovieSceneParameterSection::TransformParameterNamesAndCurves' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneParticleParameterTrack
// 0x0010 (0x0068 - 0x0058)
class UMovieSceneParticleParameterTrack final  : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneParticleParameterTrack">();
	}
	static class UMovieSceneParticleParameterTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneParticleParameterTrack>();
	}
};
//(alignof(UMovieSceneParticleParameterTrack) == 0x000008, "Wrong alignment on UMovieSceneParticleParameterTrack");
//(sizeof(UMovieSceneParticleParameterTrack) == 0x000068, "Wrong size on UMovieSceneParticleParameterTrack");
//(offsetof(UMovieSceneParticleParameterTrack, Sections) == 0x000058, "Member 'UMovieSceneParticleParameterTrack::Sections' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneParticleSection
// 0x0098 (0x0178 - 0x00E0)
class UMovieSceneParticleSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneParticleChannel             ParticleKeys;                                      // 0x00E0(0x0098)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneParticleSection">();
	}
	static class UMovieSceneParticleSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneParticleSection>();
	}
};
//(alignof(UMovieSceneParticleSection) == 0x000008, "Wrong alignment on UMovieSceneParticleSection");
//(sizeof(UMovieSceneParticleSection) == 0x000178, "Wrong size on UMovieSceneParticleSection");
//(offsetof(UMovieSceneParticleSection, ParticleKeys) == 0x0000E0, "Member 'UMovieSceneParticleSection::ParticleKeys' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneParticleTrack
// 0x0010 (0x0068 - 0x0058)
class UMovieSceneParticleTrack final  : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             ParticleSections;                                  // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneParticleTrack">();
	}
	static class UMovieSceneParticleTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneParticleTrack>();
	}
};
//(alignof(UMovieSceneParticleTrack) == 0x000008, "Wrong alignment on UMovieSceneParticleTrack");
//(sizeof(UMovieSceneParticleTrack) == 0x000068, "Wrong size on UMovieSceneParticleTrack");
//(offsetof(UMovieSceneParticleTrack, ParticleSections) == 0x000058, "Member 'UMovieSceneParticleTrack::ParticleSections' has a wrong offset!");

// Class MovieSceneTracks.MovieScenePrimitiveMaterialSection
// 0x00C0 (0x01A0 - 0x00E0)
class UMovieScenePrimitiveMaterialSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneObjectPathChannel           MaterialChannel;                                   // 0x00E0(0x00C0)(NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScenePrimitiveMaterialSection">();
	}
	static class UMovieScenePrimitiveMaterialSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScenePrimitiveMaterialSection>();
	}
};
//(alignof(UMovieScenePrimitiveMaterialSection) == 0x000008, "Wrong alignment on UMovieScenePrimitiveMaterialSection");
//(sizeof(UMovieScenePrimitiveMaterialSection) == 0x0001A0, "Wrong size on UMovieScenePrimitiveMaterialSection");
//(offsetof(UMovieScenePrimitiveMaterialSection, MaterialChannel) == 0x0000E0, "Member 'UMovieScenePrimitiveMaterialSection::MaterialChannel' has a wrong offset!");

// Class MovieSceneTracks.MovieScenePrimitiveMaterialTrack
// 0x0008 (0x0090 - 0x0088)
class UMovieScenePrimitiveMaterialTrack final  : public UMovieScenePropertyTrack
{
public:
	int32                                         MaterialIndex;                                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16C4[0x4];                                     // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieScenePrimitiveMaterialTrack">();
	}
	static class UMovieScenePrimitiveMaterialTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieScenePrimitiveMaterialTrack>();
	}
};
//(alignof(UMovieScenePrimitiveMaterialTrack) == 0x000008, "Wrong alignment on UMovieScenePrimitiveMaterialTrack");
//(sizeof(UMovieScenePrimitiveMaterialTrack) == 0x000090, "Wrong size on UMovieScenePrimitiveMaterialTrack");
//(offsetof(UMovieScenePrimitiveMaterialTrack, MaterialIndex) == 0x000088, "Member 'UMovieScenePrimitiveMaterialTrack::MaterialIndex' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneSkeletalAnimationSection
// 0x0100 (0x01E0 - 0x00E0)
class UMovieSceneSkeletalAnimationSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneSkeletalAnimationParams     Params;                                            // 0x00E0(0x00D8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UAnimSequence*                          AnimSequence;                                      // 0x01B8(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                      Animation;                                         // 0x01C0(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         StartOffset;                                       // 0x01C8(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         EndOffset;                                         // 0x01CC(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PlayRate;                                          // 0x01D0(0x0004)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         bReverse : 1;                                      // 0x01D4(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_16C5[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SlotName;                                          // 0x01D8(0x0008)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneSkeletalAnimationSection">();
	}
	static class UMovieSceneSkeletalAnimationSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneSkeletalAnimationSection>();
	}
};
//(alignof(UMovieSceneSkeletalAnimationSection) == 0x000008, "Wrong alignment on UMovieSceneSkeletalAnimationSection");
//(sizeof(UMovieSceneSkeletalAnimationSection) == 0x0001E0, "Wrong size on UMovieSceneSkeletalAnimationSection");
//(offsetof(UMovieSceneSkeletalAnimationSection, Params) == 0x0000E0, "Member 'UMovieSceneSkeletalAnimationSection::Params' has a wrong offset!");
//(offsetof(UMovieSceneSkeletalAnimationSection, AnimSequence) == 0x0001B8, "Member 'UMovieSceneSkeletalAnimationSection::AnimSequence' has a wrong offset!");
//(offsetof(UMovieSceneSkeletalAnimationSection, Animation) == 0x0001C0, "Member 'UMovieSceneSkeletalAnimationSection::Animation' has a wrong offset!");
//(offsetof(UMovieSceneSkeletalAnimationSection, StartOffset) == 0x0001C8, "Member 'UMovieSceneSkeletalAnimationSection::StartOffset' has a wrong offset!");
//(offsetof(UMovieSceneSkeletalAnimationSection, EndOffset) == 0x0001CC, "Member 'UMovieSceneSkeletalAnimationSection::EndOffset' has a wrong offset!");
//(offsetof(UMovieSceneSkeletalAnimationSection, PlayRate) == 0x0001D0, "Member 'UMovieSceneSkeletalAnimationSection::PlayRate' has a wrong offset!");
//(offsetof(UMovieSceneSkeletalAnimationSection, SlotName) == 0x0001D8, "Member 'UMovieSceneSkeletalAnimationSection::SlotName' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneSkeletalAnimationTrack
// 0x0018 (0x0070 - 0x0058)
class UMovieSceneSkeletalAnimationTrack final  : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>             AnimationSections;                                 // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseLegacySectionIndexBlend;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16C6[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneSkeletalAnimationTrack">();
	}
	static class UMovieSceneSkeletalAnimationTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneSkeletalAnimationTrack>();
	}
};
//(alignof(UMovieSceneSkeletalAnimationTrack) == 0x000008, "Wrong alignment on UMovieSceneSkeletalAnimationTrack");
//(sizeof(UMovieSceneSkeletalAnimationTrack) == 0x000070, "Wrong size on UMovieSceneSkeletalAnimationTrack");
//(offsetof(UMovieSceneSkeletalAnimationTrack, AnimationSections) == 0x000058, "Member 'UMovieSceneSkeletalAnimationTrack::AnimationSections' has a wrong offset!");
//(offsetof(UMovieSceneSkeletalAnimationTrack, bUseLegacySectionIndexBlend) == 0x000068, "Member 'UMovieSceneSkeletalAnimationTrack::bUseLegacySectionIndexBlend' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneSlomoSection
// 0x0000 (0x0180 - 0x0180)
class UMovieSceneSlomoSection final  : public UMovieSceneFloatSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneSlomoSection">();
	}
	static class UMovieSceneSlomoSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneSlomoSection>();
	}
};
//(alignof(UMovieSceneSlomoSection) == 0x000008, "Wrong alignment on UMovieSceneSlomoSection");
//(sizeof(UMovieSceneSlomoSection) == 0x000180, "Wrong size on UMovieSceneSlomoSection");

// Class MovieSceneTracks.MovieSceneSlomoTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieSceneSlomoTrack final  : public UMovieSceneFloatTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneSlomoTrack">();
	}
	static class UMovieSceneSlomoTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneSlomoTrack>();
	}
};
//(alignof(UMovieSceneSlomoTrack) == 0x000008, "Wrong alignment on UMovieSceneSlomoTrack");
//(sizeof(UMovieSceneSlomoTrack) == 0x000088, "Wrong size on UMovieSceneSlomoTrack");

// Class MovieSceneTracks.MovieSceneSpawnSection
// 0x0000 (0x0178 - 0x0178)
class UMovieSceneSpawnSection final  : public UMovieSceneBoolSection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneSpawnSection">();
	}
	static class UMovieSceneSpawnSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneSpawnSection>();
	}
};
//(alignof(UMovieSceneSpawnSection) == 0x000008, "Wrong alignment on UMovieSceneSpawnSection");
//(sizeof(UMovieSceneSpawnSection) == 0x000178, "Wrong size on UMovieSceneSpawnSection");

// Class MovieSceneTracks.MovieSceneSpawnTrack
// 0x0020 (0x0078 - 0x0058)
class UMovieSceneSpawnTrack final  : public UMovieSceneTrack
{
public:
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x0058(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                  ObjectGuid;                                        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneSpawnTrack">();
	}
	static class UMovieSceneSpawnTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneSpawnTrack>();
	}
};
//(alignof(UMovieSceneSpawnTrack) == 0x000008, "Wrong alignment on UMovieSceneSpawnTrack");
//(sizeof(UMovieSceneSpawnTrack) == 0x000078, "Wrong size on UMovieSceneSpawnTrack");
//(offsetof(UMovieSceneSpawnTrack, Sections) == 0x000058, "Member 'UMovieSceneSpawnTrack::Sections' has a wrong offset!");
//(offsetof(UMovieSceneSpawnTrack, ObjectGuid) == 0x000068, "Member 'UMovieSceneSpawnTrack::ObjectGuid' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneStringSection
// 0x00A0 (0x0180 - 0x00E0)
class UMovieSceneStringSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneStringChannel               StringCurve;                                       // 0x00E0(0x00A0)(NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneStringSection">();
	}
	static class UMovieSceneStringSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneStringSection>();
	}
};
//(alignof(UMovieSceneStringSection) == 0x000008, "Wrong alignment on UMovieSceneStringSection");
//(sizeof(UMovieSceneStringSection) == 0x000180, "Wrong size on UMovieSceneStringSection");
//(offsetof(UMovieSceneStringSection, StringCurve) == 0x0000E0, "Member 'UMovieSceneStringSection::StringCurve' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneStringTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieSceneStringTrack final  : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneStringTrack">();
	}
	static class UMovieSceneStringTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneStringTrack>();
	}
};
//(alignof(UMovieSceneStringTrack) == 0x000008, "Wrong alignment on UMovieSceneStringTrack");
//(sizeof(UMovieSceneStringTrack) == 0x000088, "Wrong size on UMovieSceneStringTrack");

// Class MovieSceneTracks.MovieSceneTransformTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieSceneTransformTrack final  : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneTransformTrack">();
	}
	static class UMovieSceneTransformTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneTransformTrack>();
	}
};
//(alignof(UMovieSceneTransformTrack) == 0x000008, "Wrong alignment on UMovieSceneTransformTrack");
//(sizeof(UMovieSceneTransformTrack) == 0x000088, "Wrong size on UMovieSceneTransformTrack");

// Class MovieSceneTracks.MovieSceneVectorSection
// 0x0288 (0x0368 - 0x00E0)
class UMovieSceneVectorSection final  : public UMovieSceneSection
{
public:
	struct FMovieSceneFloatChannel                Curves[0x4];                                       // 0x00E0(0x00A0)(NativeAccessSpecifierPrivate)
	int32                                         ChannelsUsed;                                      // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16C7[0x4];                                     // 0x0364(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneVectorSection">();
	}
	static class UMovieSceneVectorSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneVectorSection>();
	}
};
//(alignof(UMovieSceneVectorSection) == 0x000008, "Wrong alignment on UMovieSceneVectorSection");
//(sizeof(UMovieSceneVectorSection) == 0x000368, "Wrong size on UMovieSceneVectorSection");
//(offsetof(UMovieSceneVectorSection, Curves) == 0x0000E0, "Member 'UMovieSceneVectorSection::Curves' has a wrong offset!");
//(offsetof(UMovieSceneVectorSection, ChannelsUsed) == 0x000360, "Member 'UMovieSceneVectorSection::ChannelsUsed' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneVectorTrack
// 0x0008 (0x0090 - 0x0088)
class UMovieSceneVectorTrack final  : public UMovieScenePropertyTrack
{
public:
	int32                                         NumChannelsUsed;                                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_16C8[0x4];                                     // 0x008C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneVectorTrack">();
	}
	static class UMovieSceneVectorTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneVectorTrack>();
	}
};
//(alignof(UMovieSceneVectorTrack) == 0x000008, "Wrong alignment on UMovieSceneVectorTrack");
//(sizeof(UMovieSceneVectorTrack) == 0x000090, "Wrong size on UMovieSceneVectorTrack");
//(offsetof(UMovieSceneVectorTrack, NumChannelsUsed) == 0x000088, "Member 'UMovieSceneVectorTrack::NumChannelsUsed' has a wrong offset!");

// Class MovieSceneTracks.MovieSceneVisibilityTrack
// 0x0000 (0x0088 - 0x0088)
class UMovieSceneVisibilityTrack final  : public UMovieSceneBoolTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneVisibilityTrack">();
	}
	static class UMovieSceneVisibilityTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneVisibilityTrack>();
	}
};
//(alignof(UMovieSceneVisibilityTrack) == 0x000008, "Wrong alignment on UMovieSceneVisibilityTrack");
//(sizeof(UMovieSceneVisibilityTrack) == 0x000088, "Wrong size on UMovieSceneVisibilityTrack");

}

