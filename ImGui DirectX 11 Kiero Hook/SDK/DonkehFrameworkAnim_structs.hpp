#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DonkehFrameworkAnim

#include "Basic.hpp"

#include "DonkehFramework_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum DonkehFrameworkAnim.EFootstepVariant
// NumValues: 0x0007
enum class EFootstepVariant : uint8
{
	Walk                                     = 0,
	Run                                      = 1,
	Sprint                                   = 2,
	Shuffle                                  = 3,
	Jump                                     = 4,
	Land                                     = 5,
	EFootstepVariant_MAX                     = 6,
};

// Enum DonkehFrameworkAnim.EMotionDirection
// NumValues: 0x0007
enum class EMotionDirection : uint8
{
	XPos                                     = 0,
	YPos                                     = 1,
	ZPos                                     = 2,
	XNeg                                     = 3,
	YNeg                                     = 4,
	ZNeg                                     = 5,
	EMotionDirection_MAX                     = 6,
};

// Enum DonkehFrameworkAnim.EAnimDirection
// NumValues: 0x0006
enum class EAnimDirection : uint8
{
	None                                     = 0,
	Left                                     = 1,
	Right                                    = 2,
	Up                                       = 3,
	Down                                     = 4,
	EAnimDirection_MAX                       = 5,
};

// ScriptStruct DonkehFrameworkAnim.DFCharStanceContext
// 0x0001 (0x0001 - 0x0000)
struct FDFCharStanceContext final 
{
public:
	uint8                                         bWantsToBeInStance : 1;                            // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bIsInStance : 1;                                   // 0x0000(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bFullyTransitionedIntoStance : 1;                  // 0x0000(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
};
static_assert(alignof(FDFCharStanceContext) == 0x000001, "Wrong alignment on FDFCharStanceContext");
static_assert(sizeof(FDFCharStanceContext) == 0x000001, "Wrong size on FDFCharStanceContext");

// ScriptStruct DonkehFrameworkAnim.FootstepFXSettings
// 0x00F8 (0x00F8 - 0x0000)
struct FFootstepFXSettings final 
{
public:
	TMap<EPhysicalSurface, struct FPerspectiveSound> SoundsToPlay;                                      // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         VolumeMultiplier;                                  // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PitchMultiplier;                                   // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bAttachSound : 1;                                  // 0x0058(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bPlaySoundsWithPerspMeshOnly : 1;                  // 0x0058(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_10F4[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPhysicalSurface, class UFXSystemAsset*> EffectsToSpawn;                                    // 0x0060(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         bAttachEffect : 1;                                 // 0x00B0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_10F5[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                EffectLocationOffset;                              // 0x00B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               EffectRotationOffset;                              // 0x00C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                EffectScale;                                       // 0x00CC(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bSpawnEffectsWithPerspMeshOnly : 1;                // 0x00D8(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	EFootstepVariant                              FootstepVariant;                                   // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10F6[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FootstepVariantParamName;                          // 0x00DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FootBoneName;                                      // 0x00E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootTraceOffset;                                   // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bDebug : 1;                                        // 0x00F0(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_10F7[0x7];                                     // 0x00F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FFootstepFXSettings) == 0x000008, "Wrong alignment on FFootstepFXSettings");
static_assert(sizeof(FFootstepFXSettings) == 0x0000F8, "Wrong size on FFootstepFXSettings");
static_assert(offsetof(FFootstepFXSettings, SoundsToPlay) == 0x000000, "Member 'FFootstepFXSettings::SoundsToPlay' has a wrong offset!");
static_assert(offsetof(FFootstepFXSettings, VolumeMultiplier) == 0x000050, "Member 'FFootstepFXSettings::VolumeMultiplier' has a wrong offset!");
static_assert(offsetof(FFootstepFXSettings, PitchMultiplier) == 0x000054, "Member 'FFootstepFXSettings::PitchMultiplier' has a wrong offset!");
static_assert(offsetof(FFootstepFXSettings, EffectsToSpawn) == 0x000060, "Member 'FFootstepFXSettings::EffectsToSpawn' has a wrong offset!");
static_assert(offsetof(FFootstepFXSettings, EffectLocationOffset) == 0x0000B4, "Member 'FFootstepFXSettings::EffectLocationOffset' has a wrong offset!");
static_assert(offsetof(FFootstepFXSettings, EffectRotationOffset) == 0x0000C0, "Member 'FFootstepFXSettings::EffectRotationOffset' has a wrong offset!");
static_assert(offsetof(FFootstepFXSettings, EffectScale) == 0x0000CC, "Member 'FFootstepFXSettings::EffectScale' has a wrong offset!");
static_assert(offsetof(FFootstepFXSettings, FootstepVariant) == 0x0000D9, "Member 'FFootstepFXSettings::FootstepVariant' has a wrong offset!");
static_assert(offsetof(FFootstepFXSettings, FootstepVariantParamName) == 0x0000DC, "Member 'FFootstepFXSettings::FootstepVariantParamName' has a wrong offset!");
static_assert(offsetof(FFootstepFXSettings, FootBoneName) == 0x0000E4, "Member 'FFootstepFXSettings::FootBoneName' has a wrong offset!");
static_assert(offsetof(FFootstepFXSettings, FootTraceOffset) == 0x0000EC, "Member 'FFootstepFXSettings::FootTraceOffset' has a wrong offset!");

// ScriptStruct DonkehFrameworkAnim.BoneModifier
// 0x000C (0x000C - 0x0000)
struct FBoneModifier final 
{
public:
	class FName                                   Bone;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Offset;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBoneModifier) == 0x000004, "Wrong alignment on FBoneModifier");
static_assert(sizeof(FBoneModifier) == 0x00000C, "Wrong size on FBoneModifier");
static_assert(offsetof(FBoneModifier, Bone) == 0x000000, "Member 'FBoneModifier::Bone' has a wrong offset!");
static_assert(offsetof(FBoneModifier, Offset) == 0x000008, "Member 'FBoneModifier::Offset' has a wrong offset!");

}

